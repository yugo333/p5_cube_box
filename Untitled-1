let angle = 0;
let w = 25;
let maxD;
let analyzer;
let sound;
// let fft;

// function preload(){
//   sound = loadSound('assets/BAR.mp3');
// }


function setup(){
  createCanvas(400,400,WEBGL);
  maxD =dist(0,0,200,200);

  // fft = new p5.FFT();
	// fft.setInput(sound); //fftにsoundファイルを入れてあげる
  sound.loop();
  analyzer = new p5.Amplitude();
  //サウンドを音量アナライザーに入力
  analyzer.setInput(sound);
}

function draw(){
  background(255);
  translate(0,0,-500)
  // translate(width / 2,height / 2);
  rectMode(CENTER);
  rotateX(-QUARTER_PI);
  rotateY(atan(1/sqrt(2)))
  // rotateX(PI/2);
  rotateX(angle *0.1);


  // let offset = 0;
  for(let z = 0; z < height; z +=w) { 
    for(let x = 0; x < width; x +=w) { 
      push();
      var rms = analyzer.getLevel();
      let d =dist(x,z,width/2,height/2);
      let offset = map(d,0,maxD,-2,2);
      let a = angle + offset;
      let h = floor(map(sin(a),-1,1,50,300));
      // fill(255);
      translate(x -width/2,0,z- height/2);
      normalMaterial();
      box(w-2,h,w-2);
      // rect(x -width / 2 + w-2,0,w -2,h);
      pop();
    }
    // offset += 0.1;
  }
  angle += 0.08;

  // let spectrum = fft.analyze();
  //   //結果をグラフで描画
  //   beginShape();
  //   for (i = 0; i < spectrum.length; i++) {
  //   let x = map(i, 0, spectrum.length - 1, 0, width);
  //   let y = map(spectrum[i], 0, 255, height, 0);
  //   vertex(x, y);
  // }
  //   endShape();

}
  // function distance( x, y, cx, cy) {
  //   //fft変換
  //   let spectrum = fft.analyze();
  //   for(let i = 0; i < spectrum.length; i++){
  //   return sqrt(sq(cx - x) + sq(cy - y))+spectrum[i]*0.01;
  //   }
  // }